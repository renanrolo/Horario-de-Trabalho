{"version":3,"sources":["app/store/horaAction.js","app/services/functions.js","app/components/article/index.jsx","app/components/aside/index.jsx","app/components/footer/index.js","app/components/navbar/index.jsx","app/App.js","app/store/horaReducer.js","app/store/index.js","index.js"],"names":["addTurno","type","onChangeTurnoProperty","index","propName","value","payload","setCargaHoraria","cargaHoraria","removerTurno","hourStringByMinutes","minutes","leftMinutes","pad","num","size","s","length","getMinutes","texto","split","getTotalHours","turnos","totalMinutos","forEach","turno","fim","ini","getStringTotalTurno","horasTrabalhadasSaindoAgora","_horaAtualEmMinutos","date","Date","getHours","horaAtualEmMinutos","ultimoIndex","totalMinutosTrabalhados","continuar","validateInputChange","nextState","oldState","selection","start","end","connect","state","dispatch","bindActionCreators","HoraAction","Turnos","CargaHoraria","onChange","e","target","className","noValidate","htmlFor","mask","maskChar","beforeMaskedValueChange","map","onClick","useState","saindoAgora","setSaindoAgora","href","Navbar","App","key","INITIAL_STATE","JSON","parse","localStorage","getItem","window","console","log","loadState","saveState","setItem","stringify","hourHasValue","hour","previewLastTime","todosPreenchidos","t","i","total","ultimoTurno","restante","previsaoSaidaEmMinutos","store","createStore","action","newTurnos","splice","push","newTurno","item","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.ad6eb5c1.chunk.js","sourcesContent":["export function addTurno() {\r\n    return { type: 'ADD_TURNO' }\r\n}\r\n\r\nexport function onChangeTurnoProperty(index, propName, value) {\r\n    return { type: 'CHANGE_TURNO_VALUE', payload: { index, propName, value } }\r\n}\r\n\r\nexport function setCargaHoraria(cargaHoraria) {\r\n    return { type: 'UPDATE_CARGA_HORARIA', payload: cargaHoraria }\r\n\r\n}\r\n\r\nexport function removerTurno(index) {\r\n    return { type: 'REMOVE_TURNO', payload: index }\r\n\r\n}","export function hourStringByMinutes(minutes) {\r\n    if (minutes <= 0) {\r\n        return \"00:00\";\r\n    }\r\n\r\n    const leftMinutes = minutes % 60;\r\n    const hours = (minutes - leftMinutes) / 60;\r\n    return pad(hours, 2) + \":\" + pad(leftMinutes, 2)\r\n}\r\n\r\nexport function pad(num, size) {\r\n    var s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\nexport function getDiferenceInMinutes(end, ini) {\r\n    const total = getMinutes(end) - getMinutes(ini);\r\n    if (total <= 0) {\r\n        return 0;\r\n    }\r\n\r\n    return total;\r\n}\r\n\r\nexport function getMinutes(texto) {\r\n    try {\r\n        if (!texto) {\r\n            return null;\r\n        }\r\n        const [valorUm, valorDois] = texto.split(\":\")\r\n        return (+valorUm * 60) + (+valorDois);\r\n    } catch{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getTotalHours(turnos) {\r\n    let totalMinutos = 0;\r\n    turnos.forEach(turno => {\r\n        totalMinutos += getMinutes(turno.fim) - getMinutes(turno.ini);\r\n    });\r\n    return hourStringByMinutes(totalMinutos);\r\n}\r\n\r\nexport function getStringTotalTurno(turno) {\r\n    const total = getMinutes(turno.fim) - getMinutes(turno.ini);\r\n    return hourStringByMinutes(total);\r\n}\r\n\r\nexport function horaAtualEmMinutos() {\r\n    const date = new Date();\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n\r\n    return (hours * 60) + minutes;\r\n}\r\n\r\nexport function horasTrabalhadasSaindoAgora(turnos) {\r\n    const _horaAtualEmMinutos = horaAtualEmMinutos();\r\n    const ultimoIndex = turnos.length - 1;\r\n    let totalMinutosTrabalhados = 0;\r\n    let continuar = true;\r\n\r\n    turnos.forEach((turno, index) => {\r\n        const ini = getMinutes(turno.ini);\r\n        const fim = getMinutes(turno.fim);\r\n\r\n        if (index === ultimoIndex) {\r\n            if (!ini || ini > _horaAtualEmMinutos) {\r\n                continuar = false;\r\n            } else {\r\n                totalMinutosTrabalhados += (_horaAtualEmMinutos - ini);\r\n            }\r\n        }\r\n        else {\r\n            if (!ini || !fim) {\r\n                continuar = false;\r\n            } else {\r\n                totalMinutosTrabalhados += (fim - ini);\r\n            }\r\n        }\r\n    });\r\n\r\n    if (!continuar) {\r\n        return null;\r\n    }\r\n\r\n    return hourStringByMinutes(totalMinutosTrabalhados);\r\n}\r\n\r\nexport function validateInputChange(nextState, oldState) {\r\n    if (!nextState.selection || !nextState.selection.start || !nextState.selection.end || nextState.value === oldState.value) {\r\n        return nextState;\r\n    }\r\n\r\n    switch (nextState.value) {\r\n        case \"3 :  \":\r\n        case \"4 :  \":\r\n        case \"5 :  \":\r\n        case \"6 :  \":\r\n        case \"7 :  \":\r\n        case \"8 :  \":\r\n        case \"9 :  \":\r\n            {\r\n                nextState.value = pad(+nextState.value.split(\":\")[0], 2)\r\n                nextState.value += \":  \";\r\n                nextState.selection.start = 3;\r\n                nextState.selection.end = 3;\r\n                return nextState;\r\n            }\r\n        default:\r\n    }\r\n\r\n    if (nextState.selection.start === 5 && nextState.selection.end === 5) {\r\n        const minutes = +nextState.value.split(\":\")[1];\r\n        if (minutes >= 60) {\r\n            nextState.value = nextState.value.split(\":\")[0] + \":00\";\r\n            nextState.selection = { start: 3, end: 5, length: 2 }\r\n        }\r\n    }\r\n\r\n    return nextState;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as HoraAction from '../../store/horaAction'\r\nimport InputMask from 'react-input-mask';\r\nimport { validateInputChange } from '../../services/functions'\r\n\r\nconst Article = ({ Turnos, CargaHoraria, setCargaHoraria, addTurno, onChangeTurnoProperty, removerTurno }) => {\r\n\r\n    const onChange = (index, propName, e) => {\r\n        onChangeTurnoProperty(index, propName, e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-8 order-md-1\">\r\n\r\n                <h4 className=\"mb-3\">Quadro</h4>\r\n\r\n                <form className=\"needs-validation\" noValidate=\"\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"firstName\">Carga horária necessária</label>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <InputMask\r\n                                        mask=\"99:99\"\r\n                                        maskChar=\" \"\r\n                                        className=\"form-control app-input\"\r\n                                        value={CargaHoraria}\r\n                                        //ref={input => turno._name = input}\r\n                                        onChange={(e) => setCargaHoraria(e.target.value)}\r\n                                        type=\"tel\"\r\n                                        beforeMaskedValueChange={validateInputChange}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"col-12\">\r\n                        {Turnos.map((turno, index) => (\r\n                            <div className=\"row\" key={index}>\r\n                                <div className=\"input-box mr-3 mb-3\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <div className=\"input-group-text\">Início</div>\r\n                                        </div>\r\n                                        <InputMask\r\n                                            mask=\"99:99\"\r\n                                            maskChar=\" \"\r\n                                            className=\"form-control app-input\"\r\n                                            value={turno.ini}\r\n                                            //ref={input => turno._name = input}\r\n                                            onChange={(e) => onChange(index, \"ini\", e)}\r\n                                            type=\"tel\"\r\n                                            beforeMaskedValueChange={validateInputChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"input-box mr-3 mb-3\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <div className=\"input-group-text\">Fim</div>\r\n                                        </div>\r\n                                        <InputMask\r\n                                            mask=\"99:99\"\r\n                                            maskChar=\" \"\r\n                                            className=\"form-control app-input\"\r\n                                            value={turno.fim}\r\n                                            //ref={input => turno._name = input}\r\n                                            onChange={(e) => onChange(index, \"fim\", e)}\r\n                                            type=\"tel\"\r\n                                            beforeMaskedValueChange={validateInputChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {index > 0 &&\r\n                                    <div>\r\n                                        <button\r\n                                            onClick={() => { removerTurno(index) }}\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-danger mr-2\">x</button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        ))}\r\n\r\n                        <div className=\"row\">\r\n                            <button onClick={() => { addTurno() }} type=\"button\" className=\"btn btn-success\">Adicionar Turno</button>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\nconst mapDispatchToProps = dispatch => bindActionCreators(HoraAction, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as HoraAction from '../../store/horaAction'\r\nimport { getTotalHours, getStringTotalTurno } from '../../services/functions'\r\nimport { horasTrabalhadasSaindoAgora } from '../../services/functions'\r\n\r\nconst Aside = ({ Turnos }) => {\r\n\r\n    const [saindoAgora, setSaindoAgora] = useState(horasTrabalhadasSaindoAgora(Turnos));\r\n\r\n    const calcularHorasTrabalhadas = () => {\r\n        setSaindoAgora(horasTrabalhadasSaindoAgora(Turnos));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-4 order-md-2 mb-4\">\r\n\r\n                <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                    <span className=\"text-muted\">Resumo</span>\r\n                </h4>\r\n\r\n                <ul className=\"list-group mb-3\">\r\n                    {Turnos.map((turno, index) => (\r\n                        <li key={index} className=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n                            <div>\r\n                                <h6 className=\"my-0\">{index + 1}º Turno</h6>\r\n                                <small className=\"text-muted\">Das {turno.ini} as {turno.fim}</small>\r\n                            </div>\r\n                            <span className=\"text-muted\">{getStringTotalTurno(turno)}</span>\r\n                        </li>\r\n                    ))}\r\n\r\n                    <li className=\"list-group-item d-flex justify-content-between bg-light\">\r\n                        <div className=\"text-success\">\r\n                            <h6 className=\"my-0\">TOTAL</h6>\r\n                        </div>\r\n                        <strong className=\"text-success\">{getTotalHours(Turnos)}</strong>\r\n                    </li>\r\n\r\n                    {saindoAgora &&\r\n                        <li\r\n                            onClick={() => { calcularHorasTrabalhadas() }}\r\n                            className=\"cursor-pointer btn-outline-primary list-group-item d-flex justify-content-between lh-condensed\">\r\n                            <span>Agora</span>\r\n                            <strong>{saindoAgora}</strong>\r\n                        </li>\r\n                    }\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\nconst mapDispatchToProps = dispatch => bindActionCreators(HoraAction, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Aside);","import React from 'react'\r\n\r\nexport default () => (\r\n    <footer className=\"my-5 pt-5 text-muted text-center text-small\">\r\n        <p className=\"mb-1\">© Renan Rolo</p>\r\n        <ul className=\"list-inline\">\r\n            <li className=\"list-inline-item\">\r\n                <a href=\"https://github.com/renanrolo\">https://github.com/renanrolo</a>\r\n            </li>\r\n        </ul>\r\n    </footer>\r\n)","import React from 'react'\r\n\r\nconst Navbar = () => (\r\n    <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <span className=\"navbar-brand mb-0 h1\">Calculadora de Horário de Saída</span>\r\n        </nav>\r\n        <br />\r\n        <br />\r\n    </>\r\n)\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Article from './components/article'\r\nimport Aside from './components/aside'\r\nimport Footer from './components/footer'\r\nimport Navbar from './components/navbar'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Article />\r\n          <Aside />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    hourStringByMinutes,\r\n    getMinutes\r\n} from '../services/functions'\r\n\r\nconst key = \"cargahoraria\";\r\n\r\nconst INITIAL_STATE = loadState();\r\n\r\nexport default function horaReducer(state = INITIAL_STATE, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'REMOVE_TURNO': {\r\n            const index = action.payload;\r\n            const newTurnos = [...state.Turnos]\r\n            newTurnos.splice(index, 1);\r\n            return saveState({ ...state, Turnos: newTurnos })\r\n        }\r\n\r\n        case 'ADD_TURNO':\r\n            {\r\n                const newTurnos = [...state.Turnos];\r\n                newTurnos.push({ ini: '', fim: ''});\r\n                return saveState({ ...state, Turnos: newTurnos })\r\n            }\r\n\r\n        case 'CHANGE_TURNO_VALUE':\r\n            {\r\n                const { propName, value, index } = action.payload;\r\n\r\n                const newTurno = (propName === \"ini\") ?\r\n                    { ini: value } :\r\n                    { fim: value }\r\n\r\n                const newTurnos = state.Turnos.map((item, i) => {\r\n                    if (i !== index) { // This isn't the item we care about - keep it as-is\r\n                        return item\r\n                    }\r\n                    return { // Otherwise, this is the one we want - return an updated value\r\n                        ...item, ...newTurno\r\n                    }\r\n                });\r\n\r\n                previewLastTime(propName, index, newTurnos, state.CargaHoraria)\r\n\r\n                return saveState({ ...state, Turnos: newTurnos })\r\n            }\r\n\r\n        case 'UPDATE_CARGA_HORARIA':\r\n            {\r\n                const newTurnos = state.Turnos.map((item, i) => {\r\n                    return {\r\n                        ...item\r\n                    }\r\n                });\r\n\r\n                previewLastTime('ini', 0, newTurnos, action.payload)\r\n\r\n                return saveState({ ...state, CargaHoraria: action.payload, Turnos: newTurnos })\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction saveState(state) {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n    return state;\r\n}\r\n\r\nfunction loadState() {\r\n    try {\r\n        const state = JSON.parse(localStorage.getItem(key))\r\n        if (state) {\r\n            return state;\r\n        }\r\n    } catch (e) {\r\n        if (window.console) {\r\n            console.log(\"invalid loadJson\", e)\r\n        }\r\n    }\r\n\r\n    return {\r\n        Turnos: [{\r\n            ini: '08:00',\r\n            fim: '11:30'\r\n        },\r\n        {\r\n            ini: '12:30',\r\n            fim: '17:00'\r\n        }],\r\n        CargaHoraria: '08:00'\r\n    }\r\n}\r\n\r\nfunction hourHasValue(hour) {\r\n    const minutes = getMinutes(hour);\r\n\r\n    if (minutes && minutes > 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction previewLastTime(propName, index, turnos, cargaHoraria) {\r\n    if (!cargaHoraria) {\r\n        return; //se não tiver carga horaria\r\n    }\r\n\r\n    const ultimoIndex = turnos.length - 1;\r\n\r\n    if (propName === \"fim\" && index === ultimoIndex) {\r\n        return; //se estiver editando o ultimo registro\r\n    }\r\n\r\n    let todosPreenchidos = true;\r\n    turnos.forEach((t, i) => {\r\n        if (i === ultimoIndex) {\r\n            if (!hourHasValue(t.ini)) {\r\n                todosPreenchidos = false;\r\n            }\r\n        } else {\r\n            if (!hourHasValue(t.ini) || !hourHasValue(t.fim)) {\r\n                todosPreenchidos = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    if (!todosPreenchidos) {\r\n        return;\r\n    }\r\n\r\n    let total = 0;\r\n    turnos.forEach((t, i) => {\r\n        if (i < ultimoIndex) {\r\n            total += getMinutes(t.fim) - getMinutes(t.ini);\r\n        }\r\n    });\r\n\r\n    const ultimoTurno = turnos[ultimoIndex];\r\n\r\n    const restante = getMinutes(cargaHoraria) - total;\r\n\r\n    const previsaoSaidaEmMinutos = getMinutes(ultimoTurno.ini) + restante;\r\n\r\n    ultimoTurno.fim = hourStringByMinutes(previsaoSaidaEmMinutos);\r\n}","import { createStore } from 'redux';\r\n\r\nimport HoraReducer from './horaReducer';\r\n\r\nconst store = createStore(HoraReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport { Provider } from 'react-redux';\r\nimport  'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Store from './app/store'\r\n\r\nReactDOM.render(\r\n    <Provider store={Store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}